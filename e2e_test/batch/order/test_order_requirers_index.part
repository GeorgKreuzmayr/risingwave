# description: Test lookup joins with order

statement ok
SET RW_IMPLICIT_FLUSH TO true;

statement ok
create table t1 (a int, b int, c int);

statement ok
INSERT INTO t1 VALUES (10, 0, 35), (10, -2, 28), (-2, 1, 81), (6, -5, 29), (-2, -5, 51), (8, 2, 17), (1, 4, 54), (10, 5, 53), (-1, 3, 96), (10, -1, 70), (5, 2, 50), (-10, 3, 55), (9, -2, 32), (-8, 1, 91), (-2, -1, 75), (9, 4, 13), (10, -1, 82), (-3, -2, 14), (-2, 2, 24), (-5, -3, 58), (-1, 5, 35), (5, 2, 13), (-10, -5, 11), (-9, -4, 39), (2, 4, 31), (-3, 2, 77), (5, 5, 10), (-10, 2, 19), (-9, 2, 49), (2, -5, 16), (4, 1, 66), (-1, -4, 35), (-8, 5, 75), (9, -4, 100), (-10, 4, 51), (-2, 0, 36), (-10, 5, 80), (6, 2, 79), (-7, -4, 91), (-1, 1, 76), (4, 2, 100), (8, 2, 44), (-5, 2, 13), (5, -1, 83), (9, 2, 34), (1, 0, 45), (-5, -5, 50), (6, 0, 71), (3, -4, 58), (-4, -4, 46);

statement ok
create index idx1 on t1(a, b, c);

# Index on all required columns
query I rowsort
select * from t1 order by a;
----
-10 3 55
-10 2 19
-10 5 80
-10 4 51
-10 -5 11
-9 2 49
-9 -4 39
-8 1 91
-8 5 75
-7 -4 91
-5 -3 58
-5 2 13
-5 -5 50
-4 -4 46
-3 -2 14
-3 2 77
-2 -5 51
-2 1 81
-2 0 36
-2 -1 75
-2 2 24
-1 1 76
-1 -4 35
-1 5 35
-1 3 96
1 0 45
1 4 54
2 -5 16
2 4 31
3 -4 58
4 1 66
4 2 100
5 -1 83
5 2 50
5 5 10
5 2 13
6 0 71
6 -5 29
6 2 79
8 2 17
8 2 44
9 -2 32
9 -4 100
9 2 34
9 4 13
10 -1 82
10 5 53
10 0 35
10 -1 70
10 -2 28


statement ok
drop index idx1;

# Index includes all required columns

statement ok
create index idx1 on t1(b) include(a, c);

query I rowsort
select * from t1 order by b;
----
-1 -4 35
-1 1 76
-1 3 96
-1 5 35
-10 -5 11
-10 2 19
-10 3 55
-10 4 51
-10 5 80
-2 -1 75
-2 -5 51
-2 0 36
-2 1 81
-2 2 24
-3 -2 14
-3 2 77
-4 -4 46
-5 -3 58
-5 -5 50
-5 2 13
-7 -4 91
-8 1 91
-8 5 75
-9 -4 39
-9 2 49
1 0 45
1 4 54
10 -1 70
10 -1 82
10 -2 28
10 0 35
10 5 53
2 -5 16
2 4 31
3 -4 58
4 1 66
4 2 100
5 -1 83
5 2 13
5 2 50
5 5 10
6 -5 29
6 0 71
6 2 79
8 2 17
8 2 44
9 -2 32
9 -4 100
9 2 34
9 4 13


statement ok
drop index idx1;

statement ok
create index idx1 on t1(c, b) include(a);

query II rowsort
select b, c, a from t1 order by c, b;
----
5 10 5
-5 11 -10
2 13 5
2 13 -5
4 13 9
-2 14 -3
-5 16 2
2 17 8
2 19 -10
2 24 -2
-2 28 10
-5 29 6
4 31 2
-2 32 9
2 34 9
-4 35 -1
0 35 10
5 35 -1
0 36 -2
-4 39 -9
2 44 8
0 45 1
-4 46 -4
2 49 -9
-5 50 -5
2 50 5
-5 51 -2
4 51 -10
5 53 10
4 54 1
3 55 -10
-4 58 3
-3 58 -5
1 66 4
-1 70 10
0 71 6
-1 75 -2
5 75 -8
1 76 -1
2 77 -3
2 79 6
5 80 -10
1 81 -2
-1 82 10
-1 83 5
-4 91 -7
1 91 -8
3 96 -1
-4 100 9
2 100 4


statement ok
drop index idx1;

# Secondary index scan

statement ok
create index idx1 on t1(a);

query I rowsort
select * from t1 order by a;
----
-10 3 55
-10 -5 11
-10 2 19
-10 4 51
-10 5 80
-9 -4 39
-9 2 49
-8 1 91
-8 5 75
-7 -4 91
-5 -3 58
-5 2 13
-5 -5 50
-4 -4 46
-3 -2 14
-3 2 77
-2 1 81
-2 -5 51
-2 -1 75
-2 2 24
-2 0 36
-1 3 96
-1 5 35
-1 -4 35
-1 1 76
1 4 54
1 0 45
2 4 31
2 -5 16
3 -4 58
4 1 66
4 2 100
5 2 50
5 2 13
5 5 10
5 -1 83
6 -5 29
6 2 79
6 0 71
8 2 17
8 2 44
9 -2 32
9 4 13
9 -4 100
9 2 34
10 0 35
10 -2 28
10 5 53
10 -1 70
10 -1 82


statement ok
drop index idx1;

statement ok
create index idx1 on t1(b, a);

query II rowsort
select b, c, a from t1 order by b, a;
----
-5 11 -10
-5 50 -5
-5 51 -2
-5 16 2
-5 29 6
-4 39 -9
-4 91 -7
-4 46 -4
-4 35 -1
-4 58 3
-4 100 9
-3 58 -5
-2 14 -3
-2 32 9
-2 28 10
-1 75 -2
-1 83 5
-1 82 10
-1 70 10
0 36 -2
0 45 1
0 71 6
0 35 10
1 91 -8
1 81 -2
1 76 -1
1 66 4
2 19 -10
2 49 -9
2 13 -5
2 77 -3
2 24 -2
2 100 4
2 13 5
2 50 5
2 79 6
2 17 8
2 44 8
2 34 9
3 55 -10
3 96 -1
4 51 -10
4 54 1
4 31 2
4 13 9
5 80 -10
5 75 -8
5 35 -1
5 10 5
5 53 10


statement ok
drop index idx1;

statement ok
drop table t1;
